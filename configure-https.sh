#!/bin/bash

# Script de configuration HTTPS pour FDM Community
# Configure SSL/TLS avec Let's Encrypt ou certificat existant

echo "üîí Configuration HTTPS pour FDM Community"
echo "=========================================="

# Obtenir le r√©pertoire du script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonctions d'affichage
error() { echo -e "${RED}‚ùå $1${NC}"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }

# Fonction pour configurer HTTPS avec reverse proxy Synology
configure_synology_https() {
    echo ""
    info "Configuration via Synology Reverse Proxy"
    echo ""
    echo "1. Acc√©dez au Panneau de contr√¥le Synology"
    echo "2. Allez dans S√©curit√© ‚Üí Certificat"
    echo "3. Ajoutez un certificat Let's Encrypt pour teamfdm.fr"
    echo "4. Allez dans Serveur d'applications ‚Üí Reverse Proxy"
    echo "5. Cr√©ez ces r√®gles :"
    echo ""
    echo "   R√®gle 1 - Frontend :"
    echo "   Source: HTTPS teamfdm.fr:443"
    echo "   Destination: HTTP localhost:3000"
    echo ""
    echo "   R√®gle 2 - API Backend :"
    echo "   Source: HTTPS teamfdm.fr:443 /api/*"
    echo "   Destination: HTTP localhost:8001 /api/*"
    echo ""
    echo "6. Activez les r√®gles"
    echo ""
    success "Configuration termin√©e ! Votre site sera accessible via https://teamfdm.fr"
}

# Fonction pour configurer HTTPS avec Docker + Nginx
configure_docker_https() {
    echo ""
    info "Configuration via Docker + Nginx"
    echo ""
    
    # V√©rifier si les certificats existent
    if [ -d "/usr/syno/etc/certificate/_archive/system/default" ]; then
        success "Certificats Synology trouv√©s"
    else
        error "Certificats Synology non trouv√©s"
        echo "G√©n√©rez d'abord un certificat SSL dans le panneau Synology"
        return 1
    fi
    
    # Copier les fichiers de configuration HTTPS
    info "Copie des configurations HTTPS..."
    cp backend/.env.https backend/.env
    cp frontend/.env.https frontend/.env
    
    # Arr√™ter les services actuels
    info "Arr√™t des services actuels..."
    docker-compose -f docker-compose.production.yml down 2>/dev/null || true
    
    # D√©marrer avec la configuration HTTPS
    info "D√©marrage avec HTTPS..."
    docker-compose -f docker-compose.https.yml up -d --build
    
    # Attendre le d√©marrage
    info "Attente du d√©marrage (30 secondes)..."
    sleep 30
    
    # V√©rifier les services
    echo ""
    info "√âtat des services :"
    docker-compose -f docker-compose.https.yml ps
    
    echo ""
    success "Configuration Docker HTTPS termin√©e !"
    echo "üåê Site accessible via : https://teamfdm.fr"
}

# Fonction pour tester la configuration HTTPS
test_https_config() {
    echo ""
    info "Test de la configuration HTTPS..."
    
    # Test de connectivit√©
    echo "Test de redirection HTTP ‚Üí HTTPS :"
    curl -I -s http://teamfdm.fr | grep -i location || echo "Pas de redirection configur√©e"
    
    echo ""
    echo "Test HTTPS :"
    curl -I -s https://teamfdm.fr && success "HTTPS fonctionne" || error "HTTPS ne fonctionne pas"
    
    echo ""
    echo "Test API HTTPS :"
    curl -s https://teamfdm.fr/api/ && success "API HTTPS fonctionne" || error "API HTTPS ne fonctionne pas"
}

# Fonction pour mettre √† jour Discord
update_discord_config() {
    echo ""
    info "Mise √† jour de la configuration Discord"
    echo ""
    echo "1. Allez sur https://discord.com/developers/applications"
    echo "2. S√©lectionnez votre application FDM"
    echo "3. Onglet OAuth2 ‚Üí General"
    echo "4. Mettez √† jour les Redirect URIs :"
    echo ""
    echo "   Ajoutez : https://teamfdm.fr/callback"
    echo "   Gardez aussi : http://teamfdm.fr:3000/callback (pour les tests)"
    echo ""
    echo "5. Sauvegardez les modifications"
    echo ""
    success "N'oubliez pas de mettre √† jour Discord !"
}

# Menu principal
echo ""
echo "Choisissez votre m√©thode de configuration HTTPS :"
echo ""
echo "1. üîß Synology Reverse Proxy (Recommand√© - Plus simple)"
echo "2. üê≥ Docker + Nginx (Avanc√© - Plus de contr√¥le)"
echo "3. üß™ Tester la configuration HTTPS actuelle"
echo "4. üìù Instructions pour Discord"
echo "5. üìã Afficher les URLs actuelles"
echo ""
read -p "Votre choix (1-5) : " choice

case $choice in
    1)
        configure_synology_https
        update_discord_config
        ;;
    2)
        configure_docker_https
        update_discord_config
        ;;
    3)
        test_https_config
        ;;
    4)
        update_discord_config
        ;;
    5)
        echo ""
        info "URLs actuelles :"
        echo "Frontend: $(grep REACT_APP_BACKEND_URL frontend/.env)"
        echo "Backend: $(grep REDIRECT_URI backend/.env)"
        ;;
    *)
        error "Choix invalide"
        exit 1
        ;;
esac

echo ""
info "Configuration termin√©e !"
echo ""
echo "üîó URLs apr√®s configuration :"
echo "‚Ä¢ Site web : https://teamfdm.fr"
echo "‚Ä¢ API : https://teamfdm.fr/api/"
echo "‚Ä¢ Documentation : https://teamfdm.fr/api/docs"
echo ""
echo "üìù N'oubliez pas de :"
echo "‚Ä¢ Mettre √† jour Discord (redirect URIs)"
echo "‚Ä¢ Tester la connexion OAuth"
echo "‚Ä¢ V√©rifier les certificats SSL"